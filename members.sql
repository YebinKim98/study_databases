
CREATE TABLE ADDRESS_CODE
(
  ADDRESS         VARCHAR(50) NOT NULL COMMENT '주소',
  ADDRESS_CODE_ID VARCHAR(50) NOT NULL COMMENT '주소_ID',
  MEMBERS_ID      VARCHAR(50) NOT NULL COMMENT '유니크_ID'
) COMMENT '주소코드';

CREATE TABLE GENDER_CODE
(
  GENDER         VARCHAR(50) NOT NULL COMMENT '성별',
  GENDER_CODE_ID VARCHAR(50) NOT NULL COMMENT '성별_ID',
  PRIMARY KEY (GENDER_CODE_ID)
) COMMENT '성별코드';

CREATE TABLE HOBBY_CODE
(
  HOBBY_NAME    VARCHAR(50) NOT NULL COMMENT '취미명',
  HOBBY_CODE_ID VARCHAR(50) NOT NULL COMMENT '회원_취미ID'
) COMMENT '취미코드';

CREATE TABLE MEMBERS
(
  NAME            VARCHAR(50) NOT NULL COMMENT '이름',
  AGE             INTEGER     NOT NULL COMMENT '나이',
  GENDER          VARCHAR(50) NOT NULL COMMENT '성별',
  ADDRESS         VARCHAR(50) NOT NULL COMMENT '주소',
  TELEPHONE       VARCHAR(50) NOT NULL COMMENT '전화번호',
  MEMBERS_ID      VARCHAR(50) NOT NULL COMMENT '유니크_ID',
  ADDRESS_CODE_ID VARCHAR(50) NOT NULL COMMENT '유니크_ID',
  PRIMARY KEY (MEMBERS_ID)
) COMMENT '회원정보';

CREATE TABLE MEMBERS_HOBBY
(
  MEMBERS_ID    VARCHAR(50) NOT NULL COMMENT '유니크_ID',
  HOBBY_CODE_ID VARCHAR(50) NOT NULL COMMENT '회원_취미ID',
  PRIMARY KEY (HOBBY_CODE_ID)
) COMMENT '회원_취미';

CREATE TABLE MEMBERS_LOGIN
(
  EMAIL            VARCHAR(50) NOT NULL COMMENT '이메일 주소',
  UNIQUE_ID        VARCHAR(50) NOT NULL COMMENT '유니크_ID',
  MEMBERS_LOGIN_ID VARCHAR(50) NOT NULL COMMENT '회원 로그인 ID'
);

ALTER TABLE MEMBERS_HOBBY
  ADD CONSTRAINT FK_MEMBERS_TO_MEMBERS_HOBBY
    FOREIGN KEY (MEMBERS_ID)
    REFERENCES MEMBERS (MEMBERS_ID);

ALTER TABLE MEMBERS_LOGIN
  ADD CONSTRAINT FK_MEMBERS_TO_MEMBERS_LOGIN
    FOREIGN KEY (UNIQUE_ID)
    REFERENCES MEMBERS (MEMBERS_ID);

ALTER TABLE HOBBY_CODE
  ADD CONSTRAINT FK_MEMBERS_HOBBY_TO_HOBBY_CODE
    FOREIGN KEY (HOBBY_CODE_ID)
    REFERENCES MEMBERS_HOBBY (HOBBY_CODE_ID);

ALTER TABLE MEMBERS
  ADD CONSTRAINT FK_GENDER_CODE_TO_MEMBERS
    FOREIGN KEY (ADDRESS_CODE_ID)
    REFERENCES GENDER_CODE (GENDER_CODE_ID);

ALTER TABLE ADDRESS_CODE
  ADD CONSTRAINT FK_MEMBERS_TO_ADDRESS_CODE
    FOREIGN KEY (MEMBERS_ID)
    REFERENCES MEMBERS (MEMBERS_ID);
